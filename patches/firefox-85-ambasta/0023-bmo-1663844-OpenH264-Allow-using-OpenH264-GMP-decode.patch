From ca03a73f5fb761d92c289307e2aa0587144b6436 Mon Sep 17 00:00:00 2001
From: Thomas Deutschmann <whissi@gentoo.org>
Date: Fri, 11 Dec 2020 15:46:25 +0100
Subject: [PATCH 23/24] bmo#1663844: OpenH264: Allow using OpenH264 GMP decoder
 as fallback for video decoding

Signed-off-by: Thomas Deutschmann <whissi@gentoo.org>
---
 dom/media/gmp/GMPSharedMemManager.h                   | 2 +-
 dom/media/platforms/agnostic/gmp/GMPDecoderModule.cpp | 2 +-
 dom/media/platforms/agnostic/gmp/GMPVideoDecoder.cpp  | 2 ++
 3 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/dom/media/gmp/GMPSharedMemManager.h b/dom/media/gmp/GMPSharedMemManager.h
index 44c660f6ca..3a2eff3294 100644
--- a/dom/media/gmp/GMPSharedMemManager.h
+++ b/dom/media/gmp/GMPSharedMemManager.h
@@ -27,7 +27,7 @@ class GMPSharedMem {
   // returned to the parent pool (which is not included).  If more than
   // this are needed, we presume the client has either crashed or hung
   // (perhaps temporarily).
-  static const uint32_t kGMPBufLimit = 20;
+  static const uint32_t kGMPBufLimit = 40;
 
   GMPSharedMem() {
     for (size_t i = 0; i < sizeof(mGmpAllocated) / sizeof(mGmpAllocated[0]);
diff --git a/dom/media/platforms/agnostic/gmp/GMPDecoderModule.cpp b/dom/media/platforms/agnostic/gmp/GMPDecoderModule.cpp
index 641f52a58b..6bd8235073 100644
--- a/dom/media/platforms/agnostic/gmp/GMPDecoderModule.cpp
+++ b/dom/media/platforms/agnostic/gmp/GMPDecoderModule.cpp
@@ -82,7 +82,7 @@ bool GMPDecoderModule::SupportsMimeType(const nsACString& aMimeType,
 
 bool GMPDecoderModule::SupportsMimeType(
     const nsACString& aMimeType, DecoderDoctorDiagnostics* aDiagnostics) const {
-  return false;
+  return MP4Decoder::IsH264(aMimeType);
 }
 
 /* static */
diff --git a/dom/media/platforms/agnostic/gmp/GMPVideoDecoder.cpp b/dom/media/platforms/agnostic/gmp/GMPVideoDecoder.cpp
index 5019ff5a2d..4ee0ef4518 100644
--- a/dom/media/platforms/agnostic/gmp/GMPVideoDecoder.cpp
+++ b/dom/media/platforms/agnostic/gmp/GMPVideoDecoder.cpp
@@ -68,6 +68,8 @@ void GMPVideoDecoder::Decoded(GMPVideoi420Frame* aDecodedFrame) {
   RefPtr<GMPVideoDecoder> self = this;
   if (v) {
     mDecodedData.AppendElement(std::move(v));
+    mDecodePromise.ResolveIfExists(std::move(mDecodedData), __func__);
+    mDecodedData = DecodedData();
   } else {
     mDecodedData.Clear();
     mDecodePromise.RejectIfExists(
-- 
2.30.0

