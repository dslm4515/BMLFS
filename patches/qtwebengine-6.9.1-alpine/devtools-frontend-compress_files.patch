Fix build on 32bit by iterating over files sequentially instead of stuffing
them into async.

Based on https://build.opensuse.org/projects/openSUSE:Slowroll:Build:1/packages/nodejs-electron/files/devtools-frontend-compress_files-oom.patch?expand=1

diff --git a/src/3rdparty/chromium/third_party/devtools-frontend/src/scripts/build/compress_files.js b/src/3rdparty/chromium/third_party/devtools-frontend/src/scripts/build/compress_files.js
index 615a26e..da9381d 100644
--- a/src/3rdparty/chromium/third_party/devtools-frontend/src/scripts/build/compress_files.js
+++ b/src/3rdparty/chromium/third_party/devtools-frontend/src/scripts/build/compress_files.js
@@ -75,7 +75,8 @@ async function main(argv) {
   const fileList = argv[fileListPosition + 1];
   const fileListContents = await readTextFile(fileList);
   const files = fileListContents.split(' ');
-  await Promise.all(files.map(filename => filename.trim()).map(compressFile));
+  for (i in files)
+    await compressFile(files[i].trim())
 }
 
 main(process.argv).catch(err => {
