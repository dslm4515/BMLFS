#! /bin/bash

# Premake 5 
# Source: https://github.com/premake/premake-core/releases/download/v5.0.0-alpha15/premake-5.0.0-alpha15-src.zip
#
# $BUILD = Directory to temporarily install
# $PKGS  = Directory to store built packages
#
# DEPS
# Required:     
# Recommended:  NONE
# Optional:     NONE

make PREFIX=/usr -C build/gmake2.unix config=release -j2 && \

sudo -S mkdir -pv ${BUILD}/usr/bin                    && \
sudo cp -v bin/release/premake5 ${BUILD}/usr/bin/ && \

cd $BUILD && sudo -S mkdir -v ${BUILD}/install &&
cat > /tmp/slack-desc << "EOF"
# HOW TO EDIT THIS FILE:
# The "handy ruler" below makes it easier to edit a package description.  Line
# up the first '|' above the ':' following the base package name, and the '|'
# on the right side marks the last column you can put a character in.  You must
# make exactly 11 lines for the formatting to be correct.  It's also
# customary to leave one space after the ':' except on otherwise blank lines.

       |-----handy-ruler------------------------------------------------------|
premake: premake (build configuration tool)
premake:
premake: Describe your C, C++, or C# software project using a simple, easy to
premake: read syntax and let Premake generate the project files. Premake allows
premake: you to manage your project configuration in one place and still
premake: support those pesky IDE-addicted Windows coders. It also provides a
premake: complete Lua scripting environment, enabling the automation of
premake: complex configuration tasks.
premake:
premake: homepage: http://industriousone.com/premake
premake:
EOF
sudo -S mv -v /tmp/slack-desc install/ &&
sudo -S makepkg -l y -c n $PKGS/premake-5.0.0_alpha15-$(uname -m)-mlfs.txz &&
sudo -S rm -rf ${BUILD}/*
