#! /bin/bash

# QtWebengine (Chromium-based)
# Source;  https://github.com/qt/qtwebengine/archive/refs/tags/v6.9.1.tar.gz
# Source:  https://github.com/qt/qtwebengine-chromium/archive/0e01f03726a82bd9f924ab711a7cb29dacaeb5d2.tar.gz
# $BUILD = Directory to temporarily install
# $PKGS  = Directory to store built packages
#
# DEPS
# Required:     qt6-qtbase qt6-qtdeclarative qt6-qttools qt6-qtpositioning
# Required:     qt6-qtwebchannel nodejs libxml2 py3-html5lib minizip
# Recommended:  pipewire
# Optional:     krb5 spdx_tools 

export PVER="6.9.1"

# Extract chromium source
rm -rvf src/3rdparty
tar xf ../pkgs/qtwebengine-chromium-0e01f03726a82bd9f924ab711a7cb29dacaeb5d2.tar.gz 
mv qtwebengine-chromium-0e01f03726a82bd9f924ab711a7cb29dacaeb5d2 src/3rdparty

# Per Alpine Linux, add these directories
mkdir -pv .git src/3rdparty/chromium/.git 

# Apply Alpine Linux patches
patch -Np1 -i ../patches/qtwebengine-6.9.1-alpine/0001-Enable-building-on-musl.patch 
patch -Np1 -i ../patches/qtwebengine-6.9.1-alpine/0002-temp-failure-retry.patch
patch -Np1 -i ../patches/qtwebengine-6.9.1-alpine/0003-qt-musl-mallinfo.patch 
patch -Np1 -i ../patches/qtwebengine-6.9.1-alpine/0004-qt-musl-resolve.patch 
patch -Np1 -i ../patches/qtwebengine-6.9.1-alpine/0005-qtwebengine-missing-include.patch 
patch -Np1 -i ../patches/qtwebengine-6.9.1-alpine/0006-no-execinfo.patch 
patch -Np1 -i ../patches/qtwebengine-6.9.1-alpine/0007-musl-sandbox.patch
patch -Np1 -i ../patches/qtwebengine-6.9.1-alpine/0008-missing-includes.patch
patch -Np1 -i ../patches/qtwebengine-6.9.1-alpine/0009-Workaround-for-arm-build-failure.patch
patch -Np1 -i ../patches/qtwebengine-6.9.1-alpine/0010-qt6-qtwebengine-partalloc-no-tagging-arm64.patch 
patch -Np1 -i ../patches/qtwebengine-6.9.1-alpine/0011-qt6-qtwebengine-aarch64-no-ifunc.patch 
patch -Np1 -i ../patches/qtwebengine-6.9.1-alpine/0012-qt6-qtwebengine-32-bit-nodejs.patch 
patch -Np1 -i ../patches/qtwebengine-6.9.1-alpine/chromium-use-alpine-target.patch
patch -Np1 -i ../patches/qtwebengine-6.9.1-alpine/clang16-aescrypto.patch
patch -Np1 -i ../patches/qtwebengine-6.9.1-alpine/gcc13.patch 
patch -Np1 -i ../patches/qtwebengine-6.9.1-alpine/no-sandbox-settls.patch 
patch -Np1 -i ../patches/qtwebengine-6.9.1-alpine/systypes.patch 
patch -Np1 -i ../patches/qtwebengine-6.9.1-alpine/fstatat-32bit.patch 
patch -Np1 -i ../patches/qtwebengine-6.9.1-alpine/devtools-frontend-compress_files.patch 

# Set build paths
export  CMARGS="-DCMAKE_BUILD_TYPE=Release "
export CMARGS+="-DCMAKE_INSTALL_PREFIX=/opt/qt6 "
export CMARGS+="-DINSTALL_BINDIR=/opt/qt6/bin "
export CMARGS+="-DINSTALL_DOCDIR=/opt/qt6/share/doc "
export CMARGS+="-DINSTALL_ARCHDATADIR=/opt/qt6/lib "
export CMARGS+="-DINSTALL_DATADIR=/opt/qt6/share "
export CMARGS+="-DINSTALL_INCLUDEDIR=/opt/qt6/include "
export CMARGS+="-DINSTALL_MKSPECSDIR=/opt/qt6/lib/mkspecs "
export CMARGS+="-DINSTALL_EXAMPLESDIR=/opt/qt6/share/doc/examples "

# Set build options
# * Modify if package is not installed
export CMARGS+="-DQT_FEATURE_webengine_system_alsa=ON "
export CMARGS+="-DQT_FEATURE_webengine_system_ffmpeg=ON "
export CMARGS+="-DQT_FEATURE_webengine_system_icu=ON "
export CMARGS+="-DQT_FEATURE_webengine_system_libevent=ON "
export CMARGS+="-DQT_FEATURE_webengine_system_libpci=ON "
export CMARGS+="-DQT_FEATURE_webengine_system_libpng=ON "
export CMARGS+="-DQT_FEATURE_webengine_system_libwebp=ON "
export CMARGS+="-DQT_FEATURE_webengine_system_libxml=ON "
export CMARGS+="-DQT_FEATURE_webengine_system_minizip=ON "
export CMARGS+="-DQT_FEATURE_webengine_system_opus=ON "
export CMARGS+="-DQT_FEATURE_webengine_system_pulseaudio=ON "
export CMARGS+="-DQT_FEATURE_webengine_system_zlib=ON "
export CMARGS+="-DQT_FEATURE_webengine_proprietary_codecs=ON "
export CMARGS+="-DQT_FEATURE_webengine_kerberos=OFF "
export CMARGS+="-DQT_FEATURE_webengine_webrtc_pipewire=ON "

# Install fails if SBOM is enabled
#export CMARGS+="-DQT_BUILD_DOCS=OFF "
export CMARGS+="-DQT_GENERATE_SBOM=OFF "
export CMARGS+="-DQT_SBOM_GENERATE_JSON=OFF "
export CMARGS+="-DQT_SBOM_VERIFY=OFF "

# If Xorg not installed, set wayland as the default backend
export CMARGS+="-DQT_QPA_DEFAULT_PLATFORM=wayland "

# Set the compiler flags per Alpine Linux
export   CFLAGS="-D_LARGEFILE64_SOURCE -Wno-builtin-macro-redefined -Wno-deprecated-declarations "
export CXXFLAGS="-D_LARGEFILE64_SOURCE -Wno-builtin-macro-redefined -Wno-deprecated-declarations "

# Configure
cmake -B OUT -G Ninja $CMARGS

# Compile
cmake --build OUT

# Install
sudo -E -S DESTDIR=$BUILD cmake --install OUT --strip

# Drop QMAKE_PRL_BUILD_DIR because of reference to the build dir
find "$BUILD/opt/qt6/lib" -type f -name '*.prl' \
           -exec sudo sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

cd $BUILD && sudo -S mkdir -v ${BUILD}/install &&
cat > /tmp/slack-desc << "EOF"
# HOW TO EDIT THIS FILE:
# The "handy ruler" below makes it easier to edit a package description.  Line
# up the first '|' above the ':' following the base package name, and the '|'
# on the right side marks the last column you can put a character in.  You must
# make exactly 11 lines for the formatting to be correct.  It's also
# customary to leave one space after the ':' except on otherwise blank lines.

           |-----handy-ruler------------------------------------------------------|
qtwebengine: QtWebEngine 
qtwebengine:
qtwebengine: QtWebEngine is an attempt to integrate chromium's fast moving web
qtwebengine: capabilities into Qt6.
qtwebengine:
qtwebengine: Homepage: http://qt-project.org/wiki/QtWebEngine
qtwebengine:
qtwebengine:
qtwebengine:
qtwebengine:
qtwebengine:
EOF
sudo -S mv -v /tmp/slack-desc install/ &&
sudo -S makepkg -l y -c n $PKGS/qtwebengine-$PVER-$PSUFFIX &&
sudo -S rm -rf ${BUILD}/*
