#! /bin/bash

# NSS 
# Source: https://archive.mozilla.org/pub/security/nss/releases/NSS_3_72_RTM/src/nss-3.72.tar.gz
# Build Method: Alpine
#
# $BUILD = Directory to temporarily install
# $PKGS  = Directory to store built packages
#
# DEPS
# Required:     NSPR, SQlite
# Recommended:  NONE
# Optional:     NONE

# Respect LDFLAGS
sed 's/\$(MKSHLIB) -o/\$(MKSHLIB) \$(LDFLAGS) -o/g' -i nss/coreconf/rules.mk

# Fix missing includes
echo 'INCLUDES += -I../include' >> nss/lib/dbm/src/manifest.mn
sed 's|-Ideprecated|-Ideprecated -I../util -I../softoken -I.|' -i nss/lib/freebl/Makefile
echo 'INCLUDES += -I../util' >> nss/lib/sysinit/manifest.mn

unset CFLAGS CXXFLAGS

# Don't do a debug build
export BUILD_OPT=1
# Use -Os instead of -O2 where possible
export OPT_CODE_SIZE=1
# Explicitly link freebl lib with nspr
export FREEBL_NO_DEPEND=0
export NSS_USE_SYSTEM_SQLITE=1
export NSS_DISABLE_GTESTS=1
# Disable deprecated cipher
export NSS_DISABLE_DEPRECATED_SEED=1
export NSS_DISABLE_DEPRECATED_RC2=1
export NSPR_INCLUDE_DIR=$(pkg-config --cflags-only-I nspr | sed 's/-I//')
export NSPR_LIB_DIR=$(pkg-config --libs-only-L nspr | sed 's/-L//')
case "$CARCH" in
	*64* | s390x) export USE_64=1;;
esac

# Build
make -C nss/coreconf    && \
make -C nss/lib/util    && \
make -C nss/lib/dbm     && \
make -C nss/lib/sysinit && \
# "all" really doesn't build all targets, so we have to list the others we want above
make -C nss all

# Install pkgconfig files
# Easier to run as super-user
su 
install -m755 -d ${BUILD}/usr/lib/pkgconfig
install -m755 -d ${BUILD}/usr/bin
install -m755 -d ${BUILD}/usr/include/nss/private
mkdir -v ${BUILD}/install

NSS_VMAJOR=$(awk '/#define.*NSS_VMAJOR/ {print $3}' nss/lib/nss/nss.h)
NSS_VMINOR=$(awk '/#define.*NSS_VMINOR/ {print $3}' nss/lib/nss/nss.h)
NSS_VPATCH=$(awk '/#define.*NSS_VPATCH/ {print $3}' nss/lib/nss/nss.h)

for pc in nss nss-util nss-softoken; do
	sed ../../files/nss-alpine/${pc}.in \
		-e "s,%libdir%,/usr/lib,g" \
		-e "s,%prefix%,/usr,g" \
		-e "s,%exec_prefix%,/usr/bin,g" \
		-e "s,%includedir%,/usr/include/nss,g" \
		-e "s,%SOFTOKEN_VERSION%,$pkgver,g" \
		-e "s,%NSPR_VERSION%,$pkgver,g" \
		-e "s,%NSS_VERSION%,$pkgver,g" \
		-e "s,%NSSUTIL_VERSION%,$pkgver,g" \
		> ${BUILD}/usr/lib/pkgconfig/${pc}.pc
done

ln -svf nss.pc ${BUILD}/usr/lib/pkgconfig/mozilla-nss.pc
chmod -v 644   ${BUILD}/usr/lib/pkgconfig/*.pc

# Install nss-config
sed ../../files/nss-alpine/nss-config.in \
	-e "s,@libdir@,/usr/lib,g" \
	-e "s,@prefix@,/usr/bin,g" \
	-e "s,@exec_prefix@,/usr/bin,g" \
	-e "s,@includedir@,/usr/include/nss,g" \
	-e "s,@MOD_MAJOR_VERSION@,${NSS_VMAJOR},g" \
	-e "s,@MOD_MINOR_VERSION@,${NSS_VMINOR},g" \
	-e "s,@MOD_PATCH_VERSION@,${NSS_VPATCH},g" \
	> ${BUILD}/usr/bin/nss-config
chmod -v 755 ${BUILD}/usr/bin/nss-config

# Install libraries
install -m644 dist/*.OBJ/lib/*.a   ${BUILD}/usr/lib/
install -m644 dist/*.OBJ/lib/*.chk ${BUILD}/usr/lib/

for file in certutil cmsutil crlutil modutil pk12util shlibsign signtool signver ssltap; do
	install -m755 dist/*.OBJ/bin/$file ${BUILD}/usr/bin/
done

install -m644 dist/public/nss/*.h ${BUILD}/usr/include/nss/
install -m644 dist/private/nss/blapi.h dist/private/nss/alghmac.h ${BUILD}/usr/include/nss/private/

# ???
#	local minor=${pkgver#*.}
#	minor=${minor%.*}
#	for file in $(find dist/*.OBJ/lib -name "*.so"); do
#		install -m755 $file \
#			${BUILD}/usr/lib/${file##*/}.$minor
#		ln -s ${file##*/}.$minor ${BUILD}/usr/lib/${file##*/}
#	done
## ???

cd $BUILD &&
cat > /tmp/slack-desc << "EOF"
# HOW TO EDIT THIS FILE:
# The "handy ruler" below makes it easier to edit a package description.  Line
# up the first '|' above the ':' following the base package name, and the '|'
# on the right side marks the last column you can put a character in.  You must
# make exactly 11 lines for the formatting to be correct.  It's also
# customary to leave one space after the ':' except on otherwise blank lines.

   |-----handy-ruler------------------------------------------------------|
nss: nss (Network Security Services)
nss:
nss: The Network Security Services (NSS) package is a set of libraries
nss: designed to support cross-platform development of security-enabled
nss: client and server applications. Applications built with NSS can
nss: support SSL v2 and v3, TLS, PKCS #5, PKCS #7, PKCS #11, PKCS #12,
nss: S/MIME, X.509 v3 certificates, and other security standards. This is
nss: useful for implementing SSL and S/MIME or other Internet security
nss: standards into an application.
nss:
EOF
mv -v /tmp/slack-desc install/ &&
makepkg -l y -c n $PKGS/nss-3.72-$(uname -m)-mlfs.txz &&
rm -rf ${BUILD}/*

# Exit super user
exit
